{
  "hash": "49da8b9e49a0909f7cca00f2d5d85c1c",
  "result": {
    "markdown": "---\nbibliography: 00-references.bib\n---\n\n\n# Partial equilibrium trade policy analysis with structural gravity\n\n## Traditional Gravity Estimates\n\n### Preparing the data\n\nIf the reader has never used R before, please check chapters 1 to 25 from @wickham2016r.\n\nIf the reader has only fitted a few regressions in R, without much practice on transforming and cleaning data before, please check chapters 5 and 18 from @wickham2016r.\n\nPlease see the note from page 42 in @yotov2016advanced. It is a really important note, which tells us that we need to:\n\n1. Filter observations for a range of years (1986, 1990, 1994, 1998, 2002 and 2006)\n2. Transform some variables to logarithm scale (trade and dist) and create new variables from those in the original dataset\n3. Remove cases where both the exporter and the importer are the same\n4. Drop observations where the trade flow is zero\n\nUnlike @yotov2016advanced, here we shall use a single dataset for all the applications and subset its columns depending on what we need. This decision kept the *tradepolicy* R package as light as possible.\n\nBefore conducting any data filtering or regression, we need to load the required packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# dataset and summaries\nlibrary(tradepolicy)\n\n# data transformation\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)\n\n# regression\nlibrary(fixest)\n```\n:::\n\n\nStep 1, including subsetting columns for this application, is straightforward.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nch1_application1 <- agtpa_applications %>%\n  select(exporter, importer, pair_id, year, trade, dist, cntg, lang, clny) %>%\n  filter(year %in% seq(1986, 2006, 4))\n```\n:::\n\n\nFor step 2, this can be divided in parts, starting with the log transformation of trade and distance.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nch1_application1 <- ch1_application1 %>%\n  mutate(\n    log_trade = log(trade),\n    log_dist = log(dist)\n  )\n```\n:::\n\n\nContinuing step 2, we can now create the variables $Y_{i,t}$ and $E_{i,t}$ that appear on the OLS model equation in the book.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nch1_application1 <- ch1_application1 %>%\n  # Create Yit\n  group_by(exporter, year) %>%\n  mutate(\n    y = sum(trade),\n    log_y = log(y)\n  ) %>%\n  # Create Eit\n  group_by(importer, year) %>%\n  mutate(\n    e = sum(trade),\n    log_e = log(e)\n  )\n```\n:::\n\n\nThe OLS model with remoteness index needs both exporter and importer index, which grouping variables can create. We divide it into sub-steps: Replicate the computation of total exports, then the remoteness index for exporters, and finally the total imports with the corresponding remoteness index for importers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nch1_application1 <- ch1_application1 %>%\n  # Replicate total_e\n  group_by(exporter, year) %>%\n  mutate(total_e = sum(e)) %>%\n  group_by(year) %>%\n  mutate(total_e = max(total_e)) %>%\n  # Replicate rem_exp\n  group_by(exporter, year) %>%\n  mutate(\n    remoteness_exp = sum(dist * total_e / e),\n    log_remoteness_exp = log(remoteness_exp)\n  ) %>%\n  # Replicate total_y\n  group_by(importer, year) %>%\n  mutate(total_y = sum(y)) %>%\n  group_by(year) %>%\n  mutate(total_y = max(total_y)) %>%\n  # Replicate rem_imp\n  group_by(importer, year) %>%\n  mutate(\n    remoteness_imp = sum(dist / (y / total_y)),\n    log_remoteness_imp = log(remoteness_imp)\n  )\n```\n:::\n\n\nTo create the variables for the OLS with Fixed Effects Model, we followed box #1 on page 44 from @yotov2016advanced. We combine both exporter and importer variables with the year to create the fixed effects variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nch1_application1 <- ch1_application1 %>%\n  # This merges the columns exporter/importer with year\n  mutate(\n    exp_year = paste0(exporter, year),\n    imp_year = paste0(importer, year)\n  )\n```\n:::\n\n\nThe addition of exporter/importer time fixed effects concludes step 2, and now we need to perform step 3.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nch1_application1 <- ch1_application1 %>%\n  filter(exporter != importer)\n```\n:::\n\n\nSome cases require conducting step 4, and we will be explicit about it when needed.\n\n### OLS estimation ignoring multilateral resistance terms\n\nThe general equation for this model is\n$$\n\\begin{align}\n\\log X_{ij,t} =& \\:\\beta_0 + \\beta_1 DIST_{i,j} + \\beta_2 CNTG_{i,j} + \\beta_3 LANG_{i,j} + \\beta_4 CLNY_{i,j} + \\beta_5 \\log Y_{i,t} +\\\\\n\\text{ }& \\:\\beta_6 \\log E_{j,t} + \\varepsilon_{ij,t}.\n\\end{align}\n$$\n\nPlease see page 41 in @yotov2016advanced for full detail of each variable.\n\nThe model for this case is straightforward, and in this case, we need to apply step 4 from the previous section to drop cases where the trade is zero.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_ols <- feols(\n  log_trade ~ log_dist + cntg + lang + clny + log_y + log_e,\n  data = filter(ch1_application1, trade > 0)\n)\n\nsummary(fit_ols)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOLS estimation, Dep. Var.: log_trade\nObservations: 25,689\nStandard-errors: IID \n              Estimate Std. Error   t value   Pr(>|t|)    \n(Intercept) -11.283080   0.151732 -74.36173  < 2.2e-16 ***\nlog_dist     -1.001607   0.014159 -70.74094  < 2.2e-16 ***\ncntg          0.573805   0.074427   7.70961 1.3076e-14 ***\nlang          0.801548   0.033748  23.75115  < 2.2e-16 ***\nclny          0.734853   0.070387  10.44025  < 2.2e-16 ***\nlog_y         1.190236   0.005402 220.32012  < 2.2e-16 ***\nlog_e         0.907588   0.005577 162.72688  < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nRMSE: 1.74274   Adj. R2: 0.758469\n```\n:::\n:::\n\n\nThe employed function, `feols()`, does not carry a copy of its training data by default besides providing faster fitting for models with fixed effects. This is not the case in base R, where `glm()` outputs include this data, increasing the model's size, but this does not affect the model's predictions and can be changed as the user needs it [@trimmingfat].\n\nThe model is almost ready. We only need to stick to the methodology from @yotov2016advanced and cluster the standard errors by country pair (see the note on page 42, it is imperative).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_ols <- feols(\n  log_trade ~ log_dist + cntg + lang + clny + log_y + log_e,\n  data = filter(ch1_application1, trade > 0),\n  cluster = ~pair_id\n)\n\nsummary(fit_ols)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOLS estimation, Dep. Var.: log_trade\nObservations: 25,689\nStandard-errors: Clustered (pair_id) \n              Estimate Std. Error   t value   Pr(>|t|)    \n(Intercept) -11.283080   0.295827 -38.14076  < 2.2e-16 ***\nlog_dist     -1.001607   0.027340 -36.63526  < 2.2e-16 ***\ncntg          0.573805   0.184710   3.10652 1.9158e-03 ** \nlang          0.801548   0.082102   9.76286  < 2.2e-16 ***\nclny          0.734853   0.144193   5.09632 3.7405e-07 ***\nlog_y         1.190236   0.009456 125.87160  < 2.2e-16 ***\nlog_e         0.907588   0.009910  91.58459  < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nRMSE: 1.74274   Adj. R2: 0.758469\n```\n:::\n:::\n\n\nThe *tradepolicy* package provides functions to provide more informative summaries. Please read the documentation of the package and look for the `tp_summary_app_1()` function, it summarises the model in the exact way as reported in the book by providing:\n\n* Clustered standard errors.\n* Number of observations.\n* $R^2$ (if applicable).\n* Presence (or absence) of exporter and exporter-time fixed effects.\n* RESET test p-value.\n\nThese statistical results are returned as a list to keep it simple, which we can see for the model in the same format as reported in the book.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntp_summary_app_1(\n  formula = \"log_trade ~ log_dist + cntg + lang + clny + log_y + log_e\",\n  data = filter(ch1_application1, trade > 0),\n  method = \"ols\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n|term        | estimate| std.error| statistic| p.value|\n|:-----------|--------:|---------:|---------:|-------:|\n|(Intercept) |  -11.283|     0.296|   -38.141|   0.000|\n|log_dist    |   -1.002|     0.027|   -36.635|   0.000|\n|cntg        |    0.574|     0.185|     3.107|   0.002|\n|lang        |    0.802|     0.082|     9.763|   0.000|\n|clny        |    0.735|     0.144|     5.096|   0.000|\n|log_y       |    1.190|     0.009|   125.872|   0.000|\n|log_e       |    0.908|     0.010|    91.585|   0.000|\n\n\n|  nobs| rsquared|etfe  |itfe  | reset_pval|\n|-----:|--------:|:-----|:-----|----------:|\n| 25689|    0.759|FALSE |FALSE |          0|\n```\n:::\n:::\n\n\nPlease notice that the summary hides the exporter/importer fixed effects.\n\n### OLS estimation controlling for multilateral resistance terms with remote indexes\n\nThe remoteness model adds variables to the OLS model. The general equation for this model is\n$$\n\\begin{align}\n\\log X_{ij,t} =& \\:\\beta_0 + \\beta_1 DIST_{i,j} + \\beta_2 CNTG_{i,j} + \\beta_3 LANG_{i,j} + \\beta_4 CLNY_{i,j} + \\beta_5 \\log Y_{i,t} +\\\\\n\\text{ }& \\beta_6 \\log E_{j,t} + \\beta_7 \\log(REM\\_EXP_i,t) + \\beta_8 \\log(REM\\_IMP_i,t) + \\varepsilon_{ij,t}.\n\\end{align}\n$$\n\nIn the equation above $REM\\_EXP$ and $REM\\_IMP$ are defined as\n$$\n\\begin{align}\n\\log(REM\\_EXP_{i,t}) &= \\log \\left( \\sum_j \\frac{DIST_{i,j}}{E_{j,t} / Y_t} \\right) \\text{ and }\\\\\n\\log(REM\\_IMP_{j,t}) &= \\log \\left( \\sum_i \\frac{DIST_{i,j}}{Y_{i,t} / Y_t} \\right).\n\\end{align}\n$$\n\nPlease see page 43 in @yotov2016advanced for full detail of each variable.\n\nOur approach follows box #1 on page 43 from @yotov2016advanced. Fitting the regression is straightforward. It is just about adding more regressors to what we did in the last section, and we can create a list with a summary for the model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntp_summary_app_1(\n  formula = \"log_trade ~ log_dist + cntg + lang + clny + log_y + log_e +\n    log_remoteness_exp + log_remoteness_imp\",\n  data = filter(ch1_application1, trade > 0),\n  method = \"ols\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n|term               | estimate| std.error| statistic| p.value|\n|:------------------|--------:|---------:|---------:|-------:|\n|(Intercept)        |  -35.219|     1.986|   -17.731|   0.000|\n|log_dist           |   -1.185|     0.031|   -37.892|   0.000|\n|cntg               |    0.247|     0.177|     1.394|   0.164|\n|lang               |    0.739|     0.078|     9.429|   0.000|\n|clny               |    0.842|     0.150|     5.607|   0.000|\n|log_y              |    1.164|     0.009|   122.819|   0.000|\n|log_e              |    0.903|     0.010|    91.102|   0.000|\n|log_remoteness_exp |    0.972|     0.068|    14.251|   0.000|\n|log_remoteness_imp |    0.274|     0.060|     4.578|   0.000|\n\n\n|  nobs| rsquared|etfe  |itfe  | reset_pval|\n|-----:|--------:|:-----|:-----|----------:|\n| 25689|    0.765|FALSE |FALSE |          0|\n```\n:::\n:::\n\n\n### OLS estimation controlling for multilateral resistance terms with fixed effects\n\nThe general equation for this model is\n$$\n\\begin{align}\n\\log X_{ij,t} =& \\: \\beta_1 \\log(DIST)_{i,j} + \\beta_2 CNTG_{i,j} + \\beta_3 LANG_{i,j} +\\\\\n\\text{ }& \\:\\beta_4 CLNY_{i,j} + \\pi_{i,t} + \\chi_{i,t} + \\varepsilon_{ij,t}.\n\\end{align}\n$$\n\nWhere the added terms, concerning the OLS model, are $\\pi_{i,t}$ and $\\chi_{i,t}$ that account for exporter-time and importer-time fixed effects, respectively. See page 44 in @yotov2016advanced for full detail of each variable.\n\nWe can quickly generate a list as we did with the previous models. The only difference to the previous models is that in this case that the variables to the right of the \"|\" operator are the fixed effects, which are treated differently by the *fixest* package, which is used internally by the *tradepolicy* package, for faster model fitting.\n\nPlease notice that the summaries intentionally do not show fixed effects, because there are cases where we have thousands of fixed effects.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntp_summary_app_1(\n  formula = \"log_trade ~ log_dist + cntg + lang + clny | exp_year + imp_year\",\n  data = filter(ch1_application1, trade > 0),\n  method = \"ols\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n|term     | estimate| std.error| statistic| p.value|\n|:--------|--------:|---------:|---------:|-------:|\n|log_dist |   -1.216|     0.038|   -31.841|   0.000|\n|cntg     |    0.223|     0.203|     1.100|   0.271|\n|lang     |    0.661|     0.082|     8.053|   0.000|\n|clny     |    0.670|     0.149|     4.487|   0.000|\n\n\n|  nobs| rsquared|etfe |itfe | reset_pval|\n|-----:|--------:|:----|:----|----------:|\n| 25689|    0.843|TRUE |TRUE |          0|\n```\n:::\n:::\n\n\nThere is another difference when we compare `feols()` or `fepois()` against `glm()` in the presence of fixed effects, which we can explain with an example.\n\nIn the data used for the previous summary, we have $T$ years (1986, 1990, 1994, 1998, 2002 and 2006). We could be interested in filtering for a single exporter and a single importer to fit the fixed effects model\n$$\n\\log X_{t} = \\beta_1 \\log(DIST)_{i,j} + \\beta_2 CNTG_{i,j} + \\beta_3 LANG_{i,j} + \\beta_4 CLNY_{i,j} + \\sum_{u} \\beta_u FE_u + \\varepsilon_{ij,t},\n$$\nwhere\n$$\n\\begin{align*}\n&u \\in \\{1986, 1990, 1994, 1998, 2002, 2006\\} \\text{ and}\\cr\n&FE_u = \\begin{cases}\n1 & \\text {if } t = u \\cr\n0 & \\text{otherwise}.\n\\end{cases}\n\\end{align*}\n$$\n\nWhen we use `feols()`, or any of the functions in the *fixest* package, a formula of the form $z \\sim x_1 + x_2 \\mid y$ will estimate the model described in the previous equations.\n\nIf we do the same in base R, with `glm()`, the equivalent formula would be of the form $z \\sim 0 + x_1 + x_2 + y$, otherwise base R estimates a model of the form $y_t = \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + \\sum_u y_{u}$, which means that not including a zero in the formula estimates an additional coefficient in the estimation which corresponds to a global intercept or the \"grand mean\".\n\nOn the $\\beta_0$ constant, it is tough to interpret with many-way fixed effects, and it is advised against reporting it.\n\n### PPML estimation controlling for multilateral resistance terms with fixed effects\n\nThe general equation for this model is\n$$\n\\begin{align}\nX_{ij,t} =& \\:\\exp\\left[\\beta_1 \\log(DIST)_{i,j} + \\beta_2 CNTG_{i,j} +\\right.\\\\\n\\text{ }& \\:\\left.\\beta_3 LANG_{i,j} + \\beta_4 CLNY_{i,j} + \\pi_{i,t} + \\chi_{i,t}\\right] \\times \\varepsilon_{ij,t}.\n\\end{align}\n$$\n\nThe reason to compute this model, despite the lower speed compared to OLS, is that PPML is the only estimator perfectly consistent with the theoretical gravity model. By estimating with PPML, the fixed effects correspond precisely to the corresponding theoretical terms.\n\nThe data for this model is the same as for the fixed effects model, and one option in R is to use the `fepois()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_ppml <- fepois(trade ~ log_dist + cntg + lang + clny | exp_year + imp_year,\n  data = ch1_application1,\n  cluster = ~pair_id\n)\n```\n:::\n\n\nExactly as it was mentioned for `feols()`, `fepois()` shares the same differences regarding `glm()` objects.\n\nIf the reader decides to run this model and print the summary, they will notice that it does not report an $R^2$ and displays an extensive fixed effect list. For PPML models, the $R^2$ needs to be computed afterwards as Kendall's correlation (or rank correlation) between the observed and predicted values. Please see @silva2006log for the details and the RESET test for PPML (GLM) models.\n\nBeware that software such as Stata requires additional libraries such as *ppmlhdfe* to report a correct $R^2$ for the PPML model. What Stata shows is a reported pseudo-$R^2$. To construct a proper $R^2$ in R, `tp_summary_app_1()` takes the rank correlation between actual and predicted trade flows.\n\nWe can obtain a detailed list as in the previous examples.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntp_summary_app_1(\n  formula = \"trade ~ log_dist + cntg + lang + clny | exp_year + imp_year\",\n  data = ch1_application1,\n  method = \"ppml\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n|term     | estimate| std.error| statistic| p.value|\n|:--------|--------:|---------:|---------:|-------:|\n|log_dist |   -0.841|     0.032|   -26.169|   0.000|\n|cntg     |    0.437|     0.084|     5.182|   0.000|\n|lang     |    0.247|     0.078|     3.185|   0.001|\n|clny     |   -0.222|     0.118|    -1.886|   0.059|\n\n\n|  nobs| rsquared|etfe |itfe | reset_pval|\n|-----:|--------:|:----|:----|----------:|\n| 28152|    0.586|TRUE |TRUE |      0.647|\n```\n:::\n:::\n\n\n## The \"distance puzzle\" resolved\n\n### Preparing the data\n\nPlease see the note from page 47 in @yotov2016advanced. We need to proceed with similar steps as in the previous section.\n\nThe distance puzzle proposes the gravity specification\n$$\n\\begin{align}\nX_{ij,t} =& \\:\\exp\\left[\\pi_{i,t} + \\chi_{i,t} + \\beta_1 \\log(DIST)_{i,j} + \\beta_2 CNTG_{i,j} + \\beta_3 LANG_{i,j}\\right]\\times\\\\\n\\text{ }& \\:\\exp\\left[\\beta_4 CLNY_{i,j} + \\beta_5 \\log(DIST\\_INTRA_{i,i})\\right] \\times \\varepsilon_{ij,t}.\n\\end{align}\n$$\n\nThe difference concerning the last section is that now we need to separate the distance variable into multiple columns that account for discrete-time effects. The $\\beta_T$ terms of the equation reflect this. Perhaps the easiest option is to transform the year into a text column and then use the `pivot_wider()` function.\n\nWe need to remove cases where the exporter is the same as the importer and cases where trade is zero for the OLS model. For the PPML models, we need to mark rows where the exporter and the importer are the same, and we need to create the same country column, which is also required to transform the distance variables as shown in box #1 in page 48 from @yotov2016advanced.\n\nIn order to avoid creating two very similar datasets, we shall create one dataset to cover both OLS and PPML.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nch1_application2 <- agtpa_applications %>%\n  select(exporter, importer, pair_id, year, trade, dist, cntg, lang, clny) %>%\n  # this filter covers both OLS and PPML\n  filter(year %in% seq(1986, 2006, 4)) %>%\n  mutate(\n    # variables for both OLS and PPML\n    exp_year = paste0(exporter, year),\n    imp_year = paste0(importer, year),\n    year = paste0(\"log_dist_\", year),\n    log_trade = log(trade),\n    log_dist = log(dist),\n    smctry = ifelse(importer != exporter, 0, 1),\n\n    # PPML specific variables\n    log_dist_intra = log_dist * smctry,\n    intra_pair = ifelse(exporter == importer, exporter, \"inter\")\n  ) %>%\n  pivot_wider(names_from = year, values_from = log_dist, values_fill = 0) %>%\n  mutate(across(log_dist_1986:log_dist_2006, function(x) x * (1 - smctry)))\n```\n:::\n\n\nThe `across()` function is a shortcut to avoid repetition, as in the following example, we show it for reference without computation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nch1_application2 %>%\n  mutate(\n    log_dist_1986 =  log_dist_1986 * (1 - smctry),\n    log_dist_1990 =  log_dist_1990 * (1 - smctry),\n\n    # repeat log_dist_T many_times for T = 1994, 1998, ...\n\n    log_dist_2006 =  log_dist_2006 * (1 - smctry)\n  )\n```\n:::\n\n\nNote that the OLS model shall require filtering when we specify the model because we skipped filtering the cases where trade is equal to zero and both the importer and the exporter are the same. Because the solution for the \"distance puzzle\" implies different transformations and filters for the OLS and PPML cases, one possibility is to filter in the same summary functions.\n\n### OLS solution for the \"distance puzzle\"\n\nThe gravity specification, which includes $\\pi_{i,t} + \\chi_{i,t}$, means that we need to do something very similar to what we did in the last section.\n\nWith the data from above, the model specification is straightforward.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntp_summary_app_2(\n  formula = \"log_trade ~ log_dist_1986 + log_dist_1990 + log_dist_1994 +\n    log_dist_1998 + log_dist_2002 + log_dist_2006 + cntg + lang + clny |\n    exp_year + imp_year\",\n  data = filter(ch1_application2, importer != exporter, trade > 0),\n  method = \"ols\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n|term          | estimate| std.error| statistic| p.value|\n|:-------------|--------:|---------:|---------:|-------:|\n|log_dist_1986 |   -1.168|     0.044|   -26.776|   0.000|\n|log_dist_1990 |   -1.155|     0.042|   -27.295|   0.000|\n|log_dist_1994 |   -1.211|     0.046|   -26.504|   0.000|\n|log_dist_1998 |   -1.248|     0.043|   -29.179|   0.000|\n|log_dist_2002 |   -1.241|     0.044|   -28.143|   0.000|\n|log_dist_2006 |   -1.261|     0.044|   -28.853|   0.000|\n|cntg          |    0.223|     0.203|     1.100|   0.271|\n|lang          |    0.661|     0.082|     8.056|   0.000|\n|clny          |    0.670|     0.149|     4.487|   0.000|\n\n\n|  nobs| pct_chg_log_dist| pcld_std_err| pcld_std_err_pval|intr  |csfe  |\n|-----:|----------------:|------------:|-----------------:|:-----|:-----|\n| 25689|             7.95|        3.698|             0.032|FALSE |FALSE |\n```\n:::\n:::\n\n\n### PPML solution for the \"distance puzzle\"\n\nThis model is very similar to the one specified in the PPML section from the last section. We can directly fit the model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntp_summary_app_2(\n  formula = \"trade ~ 0 + log_dist_1986 + log_dist_1990 + log_dist_1994 +\n    log_dist_1998 + log_dist_2002 + log_dist_2006 + cntg + lang + clny |\n    exp_year + imp_year\",\n  data = filter(ch1_application2, importer != exporter),\n  method = \"ppml\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n|term          | estimate| std.error| statistic| p.value|\n|:-------------|--------:|---------:|---------:|-------:|\n|log_dist_1986 |   -0.859|     0.038|   -22.849|   0.000|\n|log_dist_1990 |   -0.834|     0.038|   -21.805|   0.000|\n|log_dist_1994 |   -0.835|     0.036|   -23.436|   0.000|\n|log_dist_1998 |   -0.847|     0.036|   -23.591|   0.000|\n|log_dist_2002 |   -0.848|     0.032|   -26.407|   0.000|\n|log_dist_2006 |   -0.836|     0.032|   -26.342|   0.000|\n|cntg          |    0.437|     0.084|     5.179|   0.000|\n|lang          |    0.248|     0.078|     3.185|   0.001|\n|clny          |   -0.222|     0.118|    -1.883|   0.060|\n\n\n|  nobs| pct_chg_log_dist| pcld_std_err| pcld_std_err_pval|intr  |csfe  |\n|-----:|----------------:|------------:|-----------------:|:-----|:-----|\n| 28152|            -2.75|        3.004|              0.36|FALSE |FALSE |\n```\n:::\n:::\n\n\n### Internal distance solution for the \"distance puzzle\"\n\nThis model requires us to add the internal distance variable to the PPML model and not filter the rows where the exporter and the importer are the same.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntp_summary_app_2(\n  formula = \"trade ~ 0 + log_dist_1986 + log_dist_1990 + log_dist_1994 +\n    log_dist_1998 + log_dist_2002 + log_dist_2006 + cntg + lang + clny +\n    log_dist_intra | exp_year + imp_year\",\n  data = ch1_application2,\n  method = \"ppml\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n|term           | estimate| std.error| statistic| p.value|\n|:--------------|--------:|---------:|---------:|-------:|\n|log_dist_1986  |   -0.980|     0.073|   -13.404|   0.000|\n|log_dist_1990  |   -0.940|     0.074|   -12.666|   0.000|\n|log_dist_1994  |   -0.915|     0.073|   -12.515|   0.000|\n|log_dist_1998  |   -0.887|     0.072|   -12.298|   0.000|\n|log_dist_2002  |   -0.884|     0.072|   -12.330|   0.000|\n|log_dist_2006  |   -0.872|     0.072|   -12.053|   0.000|\n|cntg           |    0.371|     0.142|     2.621|   0.009|\n|lang           |    0.337|     0.171|     1.976|   0.048|\n|clny           |    0.019|     0.159|     0.121|   0.904|\n|log_dist_intra |   -0.488|     0.102|    -4.779|   0.000|\n\n\n|  nobs| pct_chg_log_dist| pcld_std_err| pcld_std_err_pval|intr |csfe  |\n|-----:|----------------:|------------:|-----------------:|:----|:-----|\n| 28566|          -10.965|        1.058|                 0|TRUE |FALSE |\n```\n:::\n:::\n\n\n### Internal distance and home bias solution for the \"distance puzzle\"\n\nThis model requires us to add the same country variable to the internal distance model and repeat the rest of the steps from the last section.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntp_summary_app_2(\n  formula = \"trade ~ log_dist_1986 + log_dist_1990 + log_dist_1994 +\n    log_dist_1998 + log_dist_2002 + log_dist_2006 + cntg + lang + clny +\n    log_dist_intra + smctry | exp_year + imp_year\",\n  data = ch1_application2,\n  method = \"ppml\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n|term           | estimate| std.error| statistic| p.value|\n|:--------------|--------:|---------:|---------:|-------:|\n|log_dist_1986  |   -0.857|     0.064|   -13.476|   0.000|\n|log_dist_1990  |   -0.819|     0.064|   -12.748|   0.000|\n|log_dist_1994  |   -0.796|     0.064|   -12.349|   0.000|\n|log_dist_1998  |   -0.770|     0.064|   -12.040|   0.000|\n|log_dist_2002  |   -0.767|     0.064|   -12.060|   0.000|\n|log_dist_2006  |   -0.754|     0.063|   -11.950|   0.000|\n|cntg           |    0.574|     0.157|     3.645|   0.000|\n|lang           |    0.352|     0.139|     2.534|   0.011|\n|clny           |    0.027|     0.127|     0.212|   0.832|\n|log_dist_intra |   -0.602|     0.111|    -5.437|   0.000|\n|smctry         |    1.689|     0.582|     2.901|   0.004|\n\n\n|  nobs| pct_chg_log_dist| pcld_std_err| pcld_std_err_pval|intr |csfe  |\n|-----:|----------------:|------------:|-----------------:|:----|:-----|\n| 28566|          -11.969|        1.173|                 0|TRUE |FALSE |\n```\n:::\n:::\n\n\n### Fixed effects solution for the \"distance puzzle\"\n\nThis model requires us to remove the internal distance and same country variables from the last model and include the internal pair variable to account for the intra-national fixed effects.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntp_summary_app_2(\n  formula = \"trade ~ 0 + log_dist_1986 + log_dist_1990 + log_dist_1994 +\n    log_dist_1998 + log_dist_2002 + log_dist_2006 + cntg + lang + clny +\n    intra_pair | exp_year + imp_year\",\n  data = ch1_application2,\n  method = \"ppml\"\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Absence of convergence: Maximum number of iterations reached (25).\nFinal deviance: 4,983,518.2.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n|term          | estimate| std.error| statistic| p.value|\n|:-------------|--------:|---------:|---------:|-------:|\n|log_dist_1986 |   -0.910|     0.034|   -26.960|   0.000|\n|log_dist_1990 |   -0.879|     0.034|   -26.151|   0.000|\n|log_dist_1994 |   -0.860|     0.033|   -25.826|   0.000|\n|log_dist_1998 |   -0.833|     0.033|   -25.145|   0.000|\n|log_dist_2002 |   -0.829|     0.033|   -24.788|   0.000|\n|log_dist_2006 |   -0.811|     0.033|   -24.210|   0.000|\n|cntg          |    0.442|     0.086|     5.124|   0.000|\n|lang          |    0.241|     0.079|     3.034|   0.002|\n|clny          |   -0.220|     0.117|    -1.882|   0.060|\n\n\n|  nobs| pct_chg_log_dist| pcld_std_err| pcld_std_err_pval|intr |csfe |\n|-----:|----------------:|------------:|-----------------:|:----|:----|\n| 28566|          -10.931|        0.775|                 0|TRUE |TRUE |\n```\n:::\n:::\n\n\n## Regional trade agreements effects\n\n### Preparing the data\n\nThis model specification includes gravity covariates, including importer-time and exporter-time fixed effects, as in the equation\n\n$$\n\\begin{align}\nX_{ij,t} =& \\:\\exp\\left[\\pi_{i,t} + \\chi_{i,t} + \\beta_1 \\log(DIST)_{i,j} + \\beta_2 CNTG_{i,j} + \\beta_3 LANG_{i,j} +\\right.\\\\\n\\text{ }& \\:\\left.\\beta_4 CLNY_{i,j} + \\beta_5 RTA_{ij,t}\\right] \\times \\varepsilon_{ij,t}.\n\\end{align}\n$$\n\nIn comparison to the previous examples, we need to create additional variables to include fixed effects that account for the observations where the exporter and the importer are the same. These variables are internal border, internal dyad and internal borders for different years.\n\nThe direct way of obtaining the desired variables is similar to what we did in the previous sections.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nch1_application3 <- agtpa_applications %>%\n  filter(year %in% seq(1986, 2006, 4)) %>%\n  mutate(\n    exp_year = paste0(exporter, year),\n    imp_year = paste0(importer, year),\n    year = paste0(\"intl_border_\", year),\n    log_trade = log(trade),\n    log_dist = log(dist),\n    intl_brdr = ifelse(exporter == importer, pair_id, \"inter\"),\n    intl_brdr_2 = ifelse(exporter == importer, 0, 1),\n    pair_id_2 = ifelse(exporter == importer, \"0-intra\", pair_id)\n  ) %>%\n  pivot_wider(names_from = year, values_from = intl_brdr_2, values_fill = 0)\n```\n:::\n\n\nNotice that we used \"0-intra\" and not just \"intra\" because the rest of the observations in the internal dyads are numbers 1, ..., N, and R internals shall consider \"0-intra\" as the reference factor for being the first item when it orders the unique observations alphabetically. Also, observe the order of the resulting table, the pivoting of the table will put \"0-intra\" as the first row for the first exporter-importer dyad. This makes the difference between the expected or other behaviours in the next chapter.\n\nIn addition, we need to create the variable containing the trade sum to filter the cases where the sum by dyad is zero.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nch1_application3 <- ch1_application3 %>%\n  group_by(pair_id) %>%\n  mutate(sum_trade = sum(trade)) %>%\n  ungroup()\n```\n:::\n\n\n### OLS standard RTA estimates with international trade only\n\nThe gravity specification, which includes $\\pi_{i,t} + \\chi_{i,t}$, means that we need to do something very similar to what we did in the last section.\n\nWith the data from above, the model specification is straightforward.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntp_summary_app_3(\n  formula = \"log_trade ~ log_dist + cntg + lang + clny + rta | exp_year +\n    imp_year\",\n  data = filter(ch1_application3, trade > 0, importer != exporter),\n  method = \"ols\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n|term     | estimate| std.error| statistic| p.value|\n|:--------|--------:|---------:|---------:|-------:|\n|log_dist |   -1.216|     0.039|   -31.180|   0.000|\n|cntg     |    0.223|     0.203|     1.099|   0.272|\n|lang     |    0.661|     0.082|     8.045|   0.000|\n|clny     |    0.670|     0.149|     4.487|   0.000|\n|rta      |   -0.004|     0.054|    -0.081|   0.935|\n\n\n|  nobs| total_rta_effect| trta_std_err| trta_std_err_pval|intr  |\n|-----:|----------------:|------------:|-----------------:|:-----|\n| 25689|           -0.004|        0.053|             0.934|FALSE |\n```\n:::\n:::\n\n\n### PPML standard RTA estimates with international trade only\n\nThe model specification is very similar to OLS, and we only need to change the method specified in the function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntp_summary_app_3(\n  formula = \"trade ~ log_dist + cntg + lang + clny + rta | exp_year + imp_year\",\n  data = filter(ch1_application3, importer != exporter),\n  method = \"ppml\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n|term     | estimate| std.error| statistic| p.value|\n|:--------|--------:|---------:|---------:|-------:|\n|log_dist |   -0.822|     0.031|   -26.125|   0.000|\n|cntg     |    0.416|     0.084|     4.944|   0.000|\n|lang     |    0.250|     0.078|     3.211|   0.001|\n|clny     |   -0.205|     0.116|    -1.770|   0.077|\n|rta      |    0.191|     0.067|     2.855|   0.004|\n\n\n|  nobs| total_rta_effect| trta_std_err| trta_std_err_pval|intr  |\n|-----:|----------------:|------------:|-----------------:|:-----|\n| 28152|            0.191|        0.066|             0.004|FALSE |\n```\n:::\n:::\n\n\n### Addressing potential domestic trade diversion\n\nThe model specification is quite the same as PPML. We only need to add the international border variable but use the entire dataset instead of removing rows where the importer and the exporter are the same.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntp_summary_app_3(\n  formula = \"trade ~ log_dist + cntg + lang + clny + rta | exp_year + imp_year +\n    intl_brdr\",\n  data = ch1_application3,\n  method = \"ppml\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n|term     | estimate| std.error| statistic| p.value|\n|:--------|--------:|---------:|---------:|-------:|\n|log_dist |   -0.800|     0.031|   -26.025|   0.000|\n|cntg     |    0.393|     0.080|     4.906|   0.000|\n|lang     |    0.244|     0.078|     3.111|   0.002|\n|clny     |   -0.182|     0.115|    -1.581|   0.114|\n|rta      |    0.409|     0.070|     5.841|   0.000|\n\n\n|  nobs| total_rta_effect| trta_std_err| trta_std_err_pval|intr  |\n|-----:|----------------:|------------:|-----------------:|:-----|\n| 28566|            0.409|        0.069|                 0|FALSE |\n```\n:::\n:::\n\n\n### Addressing potential endogeneity of RTAs\n\nThe model specification includes the RTA variable and the exporter-time, importer-time and internal dyad fixed effects to account for domestic trade.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntp_summary_app_3(\n  formula = \"trade ~ rta | exp_year + imp_year + pair_id_2\",\n  data = filter(ch1_application3, sum_trade > 0),\n  method = \"ppml\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n|term | estimate| std.error| statistic| p.value|\n|:----|--------:|---------:|---------:|-------:|\n|rta  |    0.557|     0.108|     5.138|       0|\n\n\n|  nobs| total_rta_effect| trta_std_err| trta_std_err_pval|intr  |\n|-----:|----------------:|------------:|-----------------:|:-----|\n| 28482|            0.557|        0.102|                 0|FALSE |\n```\n:::\n:::\n\n\n### Testing for potential \"reverse causality\" between trade and RTAs\n\nWe need to modify the previous model to include the forward lagged RTA variable (by four years) and consider where the trade sum is larger than zero.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntp_summary_app_3(\n  formula = \"trade ~ rta + rta_lead4 | exp_year + imp_year + pair_id_2\",\n  data = filter(ch1_application3, sum_trade > 0),\n  method = \"ppml\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n|term      | estimate| std.error| statistic| p.value|\n|:---------|--------:|---------:|---------:|-------:|\n|rta       |    0.520|     0.091|     5.709|   0.000|\n|rta_lead4 |    0.077|     0.098|     0.792|   0.428|\n\n\n|  nobs| total_rta_effect| trta_std_err| trta_std_err_pval|intr  |\n|-----:|----------------:|------------:|-----------------:|:-----|\n| 28482|            0.597|        0.138|                 0|FALSE |\n```\n:::\n:::\n\n\n### Addressing potential non-linear and phasing-in effects of RTAs\n\nInstead of future-lagged RTA variables, as in the previous model, we modify the previous model and include the RTA backwards lagged variables instead.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntp_summary_app_3(\n  formula = \"trade ~ rta + rta_lag4 + rta_lag8 + rta_lag12 | exp_year +\n    imp_year + pair_id_2\",\n  data = filter(ch1_application3, sum_trade > 0),\n  method = \"ppml\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n|term      | estimate| std.error| statistic| p.value|\n|:---------|--------:|---------:|---------:|-------:|\n|rta       |    0.291|     0.095|     3.081|   0.002|\n|rta_lag4  |    0.414|     0.071|     5.798|   0.000|\n|rta_lag8  |    0.169|     0.046|     3.688|   0.000|\n|rta_lag12 |    0.119|     0.032|     3.729|   0.000|\n\n\n|  nobs| total_rta_effect| trta_std_err| trta_std_err_pval|intr  |\n|-----:|----------------:|------------:|-----------------:|:-----|\n| 28482|            0.993|        0.094|                 0|FALSE |\n```\n:::\n:::\n\n\n### Addressing globalization effects\n\nIn addition to the previous model, we include the international borders on different years besides the lagged RTAs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntp_summary_app_3(\n  formula = \"trade ~ rta + rta_lag4 + rta_lag8 + rta_lag12 + intl_border_1986 +\n    intl_border_1990 + intl_border_1994 + intl_border_1998 + intl_border_2002 |\n    exp_year + imp_year + pair_id_2\",\n  data = filter(ch1_application3, sum_trade > 0),\n  method = \"ppml\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n|term             | estimate| std.error| statistic| p.value|\n|:----------------|--------:|---------:|---------:|-------:|\n|rta              |    0.116|     0.092|     1.258|   0.209|\n|rta_lag4         |    0.288|     0.065|     4.399|   0.000|\n|rta_lag8         |    0.069|     0.051|     1.356|   0.175|\n|rta_lag12        |    0.002|     0.031|     0.076|   0.939|\n|intl_border_1986 |   -0.706|     0.051|   -13.917|   0.000|\n|intl_border_1990 |   -0.480|     0.046|   -10.541|   0.000|\n|intl_border_1994 |   -0.367|     0.035|   -10.327|   0.000|\n|intl_border_1998 |   -0.158|     0.025|    -6.405|   0.000|\n|intl_border_2002 |   -0.141|     0.018|    -7.867|   0.000|\n\n\n|  nobs| total_rta_effect| trta_std_err| trta_std_err_pval|intr  |\n|-----:|----------------:|------------:|-----------------:|:-----|\n| 28482|            0.475|        0.109|                 0|FALSE |\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}